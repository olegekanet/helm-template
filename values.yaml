replicaCount: 1
tests: false
image:
  repository: registry.gitlab.com/devops_ch2dk/phoenix-gateway-docker
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: pgsql14
  restartPolicy: Always

container:
  name: http
  port: 4001

probe:
  liveness:
    enabled: true
    path: "/"
    port: "http"
  readiness:
    enabled: true
    path: /
    port: http

env:
  namespace: "test-namespace"
  base_url: "example.com"
  shortname_url: "gw"
  ## |-  описываем блок с переменными как string
  config: 
    - name: PSQL_PASS
      value: vault:app-conf/NAMESPACE#PSQL_PASS
    - name: RAILS_MYSQL_PASS
      value: vault:app-conf/NAMESPACE#RAILS_MYSQL_PASS
    - name: HD_MYSQL_PASS
      value: vault:app-conf/NAMESPACE#HD_MYSQL_PASS
    - name: LC_MYSQL_PASS
      value: vault:app-conf/NAMESPACE#LC_MYSQL_PASS
    - name: LC2_MYSQL_PASS
      value: vault:app-conf/NAMESPACE#LC2_MYSQL_PASS
    - name: STATS_MYSQL_PASS
      value: vault:app-conf/NAMESPACE#STATS_MYSQL_PASS
    - name: GATEWAY_MYSQL_PASS
      value: vault:app-conf/NAMESPACE#GATEWAY_MYSQL_PASS
    - name: WS_MYSQL_PASS
      value: vault:app-conf/NAMESPACE#WS_MYSQL_PASS
    - name: PSQL_USER
      value: vault:app-conf/NAMESPACE#PSQL_USER
    - name: PSQL_HOST
      value: vault:app-conf/NAMESPACE#PSQL_HOST
    - name: PSQL_DB
      value: vault:app-conf/NAMESPACE#PSQL_DB
    - name: PSQL_PORT
      value: vault:app-conf/NAMESPACE#PSQL_PORT
    - name: REDIS_HOST
      value: vault:app-conf/NAMESPACE#REDIS_HOST
    - name: REDIS_PORT
      value: vault:app-conf/NAMESPACE#REDIS_PORT
    - name: REDIS_PASS
      value: vault:app-conf/NAMESPACE#REDIS_PASS
    - name: MYSQL_HOST
      value: vault:app-conf/NAMESPACE#MYSQL_HOST
    - name: MYSQL_PORT
      value: vault:app-conf/NAMESPACE#MYSQL_PORT
    - name: RAILS_MYSQL_USER
      value: vault:app-conf/NAMESPACE#RAILS_MYSQL_USER
    - name: HD_MYSQL_USER
      value: vault:app-conf/NAMESPACE#HD_MYSQL_USER
    - name: LC_MYSQL_USER
      value: vault:app-conf/NAMESPACE#LC_MYSQL_USER
    - name: LC2_MYSQL_USER
      value: vault:app-conf/NAMESPACE#LC2_MYSQL_USER
    - name: STATS_MYSQL_USER
      value: vault:app-conf/NAMESPACE#STATS_MYSQL_USER
    - name: GATEWAY_MYSQL_USER
      value: vault:app-conf/NAMESPACE#GATEWAY_MYSQL_USER
    - name: WS_MYSQL_USER
      value: vault:app-conf/NAMESPACE#WS_MYSQL_USER
    - name: RAILS_ENV
      value: vault:app-conf/NAMESPACE#RAILS_ENV
    - name: RAKE_ENV
      value: vault:app-conf/NAMESPACE#RAKE_ENV
    - name: NODE_ENV
      value: vault:app-conf/NAMESPACE#NODE_ENV
    - name: MIX_ENV
      value: vault:app-conf/NAMESPACE#MIX_ENV
    - name: SSL
      value: vault:app-conf/NAMESPACE#SSL
    - name: SHOW_SBERBOT
      value: vault:app-conf/NAMESPACE#SHOW_SBERBOT
    - name: LOG_LEVEL
      value: vault:app-conf/NAMESPACE#LOG_LEVEL
    - name: RAILS_LOG_TO_STDOUT
      value: vault:app-conf/NAMESPACE#RAILS_LOG_TO_STDOUT
    - name: TZ
      value: vault:app-conf/NAMESPACE#TZ
    - name: SUPERCOMPANY
      value: vault:app-conf/NAMESPACE#SUPERCOMPANY
    - name: SUPERPASS
      value: vault:app-conf/NAMESPACE#SUPERPASS
    - name: AD_COMPANY_ID
      value: vault:app-conf/NAMESPACE#AD_COMPANY_ID
    - name: STORAGE_PROVIDER
      value: vault:app-conf/NAMESPACE#STORAGE_PROVIDER
    - name: STORAGE_CONFIG
      value: vault:app-conf/NAMESPACE#STORAGE_CONFIG
    - name: FB_CLIENT_ID
      value: vault:app-conf/NAMESPACE#FB_CLIENT_ID
    - name: FB_CLIENT_SECRET
      value: vault:app-conf/NAMESPACE#FB_CLIENT_SECRET
    - name: TG_BOT_EN
      value: vault:app-conf/NAMESPACE#TG_BOT_EN
    - name: TG_BOT_RU
      value: vault:app-conf/NAMESPACE#TG_BOT_RU
    - name: CLICKER_API
      value: vault:app-conf/NAMESPACE#CLICKER_API
    - name: SSL_CACERTFILE
      value: /usr/local/share/ca-certificates/DigiCertCA.crt
    - name: SMTP_ADDRESS
      value: vault:app-conf/NAMESPACE#SMTP_ADDRESS
    - name: SMTP_PORT
      value: vault:app-conf/NAMESPACE#SMTP_PORT
    - name: SMTP_USER_NAME
      value: vault:app-conf/NAMESPACE#SMTP_USER_NAME
    - name: SMTP_PASSWORD
      value: vault:app-conf/NAMESPACE#SMTP_PASSWORD
    - name: SMTP_ENABLE_STARTTLS
      value: vault:app-conf/NAMESPACE#SMTP_ENABLE_STARTTLS

  urls:
    - name: HELPDESK
      value: 'helpdesk.{{ .Values.env.namespace }}'
    - name: GATEWAY
      value: 'gateway.{{ .Values.env.namespace }}'
    - name: RAILS_HD
      value: 'rails-helpdesk.{{ .Values.env.namespace }}'
    - name: GW
      value: 'phoenix-gateway.{{ .Values.env.namespace }}'
    - name: STATS
      value: 'stat.{{ .Values.env.namespace }}'
    - name: STORAGE
      value: 'storage.{{ .Values.env.namespace }}'
    - name: LCHAT
      value: 'livechat.{{ .Values.env.namespace }}'
    - name: LCHAT_V2
      value: 'livechatv2.{{ .Values.env.namespace }}'
    - name: HD_URL 
      value: 'https://{{ .Values.env.namespace }}.{{ .Values.env.base_url }}'
    - name: GW_URL
      value: 'https://gw-{{ .Values.env.namespace }}.{{ .Values.env.base_url }}'
    - name: ROR_URL
      value: 'https://ror-{{ .Values.env.namespace }}.{{ .Values.env.base_url }}'
    - name: LC_URL
      value: 'https://livechat-{{ .Values.env.namespace }}.{{ .Values.env.base_url }}'
    - name: LC2_URL
      value: 'https://livechatv2-{{ .Values.env.namespace }}.{{ .Values.env.base_url }}'
    - name: GATEWAY_URL
      value: 'https://gateway-{{ .Values.env.namespace }}.{{ .Values.env.base_url }}'
    - name: STATS_URL
      value: 'https://stats-{{ .Values.env.namespace }}.{{ .Values.env.base_url }}'
    - name: LC2_WS_URL
      value: 'wss://livechatv2-{{ .Values.env.namespace }}.{{ .Values.env.base_url }}/widget_ws_new'
    - name: STORAGE_URL
      value: 'https://storage-{{ .Values.env.namespace }}.{{ .Values.env.base_url }}'
    - name: WS_URL
      value: 'wss://ror-{{ .Values.env.namespace }}.{{ .Values.env.base_url }}'
    - name: RAILS_LIVECHAT_V2_WS
      value: 'wss://livechatv2-{{ .Values.env.namespace }}.{{ .Values.env.base_url }}/widget_ws_new'
    - name: RAILS_LIVECHAT_V2_PATH
      value: 'https://livechatv2-{{ .Values.env.namespace }}.{{ .Values.env.base_url }}'
    - name: CLICKER_API_URL 
      value: 'http://clicker_api.{{ .Values.env.namespace }}:4005'
    - name: KRB_URL 
      value: 'https://kerberos-{{ .Values.env.namespace }}.{{ .Values.env.base_url }}'
    - name: STORAGE_API_URL 
      value: 'http://storage-api.{{ .Values.env.namespace }}'
    - name: SMART_SCRIPTS_URL 
      value: 'http://smart-scripts.{{ .Values.env.namespace }}'
    - name: INSTA_LOCAL_ROUTER 
      value: 'http://insta-router-{{ .Values.env.namespace }}.{{ .Values.env.base_url }}'
    - name: INSTANCE_HOSTS 
      value: '["http://insta-service.{{ .Values.env.namespace }}"]'
imagePullSecrets:
  - name: regcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: 
  #vault.security.banzaicloud.io/vault-addr: "https://vault.chat2desk.tech" 
  vault.security.banzaicloud.io/vault-addr: "https://home.olegekanet.com:8200" 
  vault.security.banzaicloud.io/vault-role: "NAMESPACE" 
  vault.security.banzaicloud.io/vault-skip-verify: "true" 
  vault.security.banzaicloud.io/vault-agent: "false" 
  vault.security.banzaicloud.io/vault-path: "kubernetes/" 
podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
    nginx.org/server-snippets: |
      location = /robots.txt { return 200 "User-agent: *\nDisallow: /\n"; }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    host: "{{ .Values.env.shortname_url }}-{{  .Values.env.namespace }}.{{ .Values.env.base_url }}"
    paths:
      - path: /
        pathType: Prefix
  tls:
    secretName: sslcert
    hosts:
      - "{{ .Values.env.shortname_url }}-{{  .Values.env.namespace }}.{{ .Values.env.base_url }}"
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}




######### initContainers ##################
initContainers:
  # - name: build-static
  #   image: "repo/init-image1:latest"
  #   command: ['sh', '-c', "yarn install --production=false && yarn build"]
  #   volumeMounts:
  #     - name: pv-storage
  #       mountPath: /app/static

  # - name: prepare-db
  #   image: "repo/init-image2:latest"
  #   command: ['sh', '-c', "bundle exec rake db:migrate"]
  #   volumeMounts:
  #     - name: db-storage
  #       mountPath: /app/db

  - name: wait-for-service
    image: "nginx"
    command: ['sh', '-c', "sleep 30"]
    # env:
    #   - name: SERVICE_URL
    #     value: "http://example.com"

######### END initContainers ##################
# env:
#   config: 
#     - name: PSQL_PASS
#       value: vault:app-conf/test-namespace#PSQL_PASS
#     - name: RAILS_MYSQL_PASS
#       value: vault:app-conf/test-namespace#RAILS_MYSQL_PASS
#   urls:
#     - name: HELPDESK
#       value: 'helpdesk.test-namespace'
#     - name: GATEWAY
#       value: 'gateway.test-namespace'

